\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{from} \PYG{n+nn}{typing} \PYG{k+kn}{import} \PYG{n}{List}


\PYG{k}{class} \PYG{n+nc}{DisjointSet}\PYG{p}{:}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{data}\PYG{p}{:} \PYG{n}{List}\PYG{p}{[}\PYG{n+nb}{str}\PYG{p}{]):}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{fa} \PYG{o}{=} \PYG{n+nb}{dict}\PYG{p}{()}  \PYG{c+c1}{\PYGZsh{} “fa” means the precursor of the node}
        \PYG{k}{for} \PYG{n}{datum} \PYG{o+ow}{in} \PYG{n}{data}\PYG{p}{:}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{datum}\PYG{p}{]} \PYG{o}{=} \PYG{n}{datum}

    \PYG{k}{def} \PYG{n+nf}{find}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{x}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n+nb}{str}\PYG{p}{:}  \PYG{c+c1}{\PYGZsh{} find the ancestor of the node}
        \PYG{k}{while} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{x}\PYG{p}{]} \PYG{o}{!=} \PYG{n}{x}\PYG{p}{:}
            \PYG{n}{x} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{x}\PYG{p}{]}
        \PYG{k}{return} \PYG{n}{x}

    \PYG{k}{def} \PYG{n+nf}{union}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{x}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{,} \PYG{n}{y}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{k+kc}{None}\PYG{p}{:}  \PYG{c+c1}{\PYGZsh{} union x and y, that is, make x be y\PYGZsq{}s father}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{y}\PYG{p}{]} \PYG{o}{=} \PYG{n}{x}

    \PYG{k}{def} \PYG{n+nf}{is\PYGZus{}linked}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{x}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{,} \PYG{n}{y}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n+nb}{bool}\PYG{p}{:}  \PYG{c+c1}{\PYGZsh{} judge whether x\PYGZsq{}s ancestor is the same as y\PYGZsq{}s}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{find}\PYG{p}{(}\PYG{n}{x}\PYG{p}{)} \PYG{o}{==} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{find}\PYG{p}{(}\PYG{n}{y}\PYG{p}{)}

    \PYG{k}{def} \PYG{n+nf}{path}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{start}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{,} \PYG{n}{end}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n}{List}\PYG{p}{[}\PYG{n+nb}{str}\PYG{p}{]:}  \PYG{c+c1}{\PYGZsh{} make the shortest path from records of precursor of the}
        \PYG{c+c1}{\PYGZsh{} \PYGZdq{}end\PYGZdq{} node}
        \PYG{n}{res} \PYG{o}{=} \PYG{p}{[}\PYG{n}{end}\PYG{p}{]}
        \PYG{k}{while} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{end}\PYG{p}{]} \PYG{o}{!=} \PYG{n}{end}\PYG{p}{:}
            \PYG{n}{end} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{end}\PYG{p}{]}
            \PYG{n}{res}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{end}\PYG{p}{)}

        \PYG{n}{res}\PYG{o}{.}\PYG{n}{reverse}\PYG{p}{()}
        \PYG{k}{if} \PYG{n}{res}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{!=} \PYG{n}{start}\PYG{p}{:}  \PYG{c+c1}{\PYGZsh{} that means \PYGZdq{}end\PYGZdq{} is unconnected with \PYGZdq{}start\PYGZdq{}}
            \PYG{k}{return} \PYG{p}{[]}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{k}{return} \PYG{n}{res}
\end{Verbatim}
